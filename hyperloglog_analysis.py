import re
import time
from datasketch import HyperLogLog


def load_ips_from_log(file_path: str) -> list[str]:
    """–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î IP-–∞–¥—Ä–µ—Å–∏ –∑ –ª–æ–≥-—Ñ–∞–π–ª—É"""
    ips = []
    pattern = re.compile(r'\b(?:\d{1,3}\.){3}\d{1,3}\b')
    with open(file_path, 'r', encoding='utf-8', errors='ignore') as file:
        for line in file:
            match = pattern.search(line)
            if match:
                ips.append(match.group())
    return ips


def count_unique_ips_set(ips: list[str]) -> tuple[int, float]:
    """–¢–æ—á–Ω–∏–π –ø—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ —á–µ—Ä–µ–∑ set"""
    start = time.time()
    unique_ips = len(set(ips))
    end = time.time()
    return unique_ips, end - start


def count_unique_ips_hll(ips: list[str], precision: int = 12) -> tuple[int, float]:
    """–ù–∞–±–ª–∏–∂–µ–Ω–∏–π –ø—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ —á–µ—Ä–µ–∑ HyperLogLog"""
    start = time.time()
    hll = HyperLogLog(p=precision)
    for ip in ips:
        hll.update(ip.encode('utf-8'))
    end = time.time()
    return int(hll.count()), end - start


if __name__ == "__main__":
    log_file = "lms-stage-access.log"

    print("üîπ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è IP-–∞–¥—Ä–µ—Å —ñ–∑ –ª–æ–≥-—Ñ–∞–π–ª—É...")
    ips = load_ips_from_log(log_file)
    print(f"–ó–Ω–∞–π–¥–µ–Ω–æ {len(ips)} –∑–∞–ø–∏—Å—ñ–≤ —É –ª–æ–≥-—Ñ–∞–π–ª—ñ.")

    print("\nüîπ –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—ñ–≤...")
    exact_count, exact_time = count_unique_ips_set(ips)
    hll_count, hll_time = count_unique_ips_hll(ips)

    print("\n–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è:")
    print(f"{'–ú–µ—Ç–æ–¥':<25}{'–£–Ω—ñ–∫–∞–ª—å–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏':<25}{'–ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è (—Å–µ–∫.)'}")
    print(f"{'-'*70}")
    print(f"{'–¢–æ—á–Ω–∏–π –ø—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ (set)':<25}{exact_count:<25}{exact_time:.4f}")
    print(f"{'HyperLogLog':<25}{hll_count:<25}{hll_time:.4f}")
